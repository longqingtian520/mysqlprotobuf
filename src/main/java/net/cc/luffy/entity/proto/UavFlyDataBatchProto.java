// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uav_flydata_Batch.proto

package net.cc.luffy.entity.proto;

public final class UavFlyDataBatchProto {
	private UavFlyDataBatchProto() {
	}

	public static void registerAllExtensions(com.github.os72.protobuf351.ExtensionRegistryLite registry) {
	}

	public static void registerAllExtensions(com.github.os72.protobuf351.ExtensionRegistry registry) {
		registerAllExtensions((com.github.os72.protobuf351.ExtensionRegistryLite) registry);
	}

	public interface UavFlyDataBatchOrBuilder extends
			// @@protoc_insertion_point(interface_extends:net.cc.luffy.entity.proto.UavFlyDataBatch)
			com.github.os72.protobuf351.MessageOrBuilder {

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		java.util.List<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData> getFlyDataList();

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData getFlyData(int index);

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		int getFlyDataCount();

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		java.util.List<? extends net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder> getFlyDataOrBuilderList();

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder getFlyDataOrBuilder(int index);
	}

	/**
	 * <pre>
	 * 飞参数据
	 * </pre>
	 *
	 * Protobuf type {@code net.cc.luffy.entity.proto.UavFlyDataBatch}
	 */
	public static final class UavFlyDataBatch extends com.github.os72.protobuf351.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:net.cc.luffy.entity.proto.UavFlyDataBatch)
			UavFlyDataBatchOrBuilder {
		private static final long serialVersionUID = 0L;

		// Use UavFlyDataBatch.newBuilder() to construct.
		private UavFlyDataBatch(com.github.os72.protobuf351.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}

		private UavFlyDataBatch() {
			flyData_ = java.util.Collections.emptyList();
		}

		@java.lang.Override
		public final com.github.os72.protobuf351.UnknownFieldSet getUnknownFields() {
			return this.unknownFields;
		}

		private UavFlyDataBatch(com.github.os72.protobuf351.CodedInputStream input,
				com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
				throws com.github.os72.protobuf351.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.github.os72.protobuf351.UnknownFieldSet.Builder unknownFields = com.github.os72.protobuf351.UnknownFieldSet
					.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						done = true;
						break;
					case 10: {
						if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
							flyData_ = new java.util.ArrayList<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData>();
							mutable_bitField0_ |= 0x00000001;
						}
						flyData_.add(input.readMessage(net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.parser(),
								extensionRegistry));
						break;
					}
					default: {
						if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
							done = true;
						}
						break;
					}
					}
				}
			} catch (com.github.os72.protobuf351.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.github.os72.protobuf351.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
			} finally {
				if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
					flyData_ = java.util.Collections.unmodifiableList(flyData_);
				}
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static final com.github.os72.protobuf351.Descriptors.Descriptor getDescriptor() {
			return net.cc.luffy.entity.proto.UavFlyDataBatchProto.internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_descriptor;
		}

		@java.lang.Override
		protected com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
			return net.cc.luffy.entity.proto.UavFlyDataBatchProto.internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch.class,
							net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch.Builder.class);
		}

		public static final int FLYDATA_FIELD_NUMBER = 1;
		private java.util.List<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData> flyData_;

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		public java.util.List<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData> getFlyDataList() {
			return flyData_;
		}

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		public java.util.List<? extends net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder> getFlyDataOrBuilderList() {
			return flyData_;
		}

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		public int getFlyDataCount() {
			return flyData_.size();
		}

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		public net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData getFlyData(int index) {
			return flyData_.get(index);
		}

		/**
		 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
		 */
		public net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder getFlyDataOrBuilder(int index) {
			return flyData_.get(index);
		}

		private byte memoizedIsInitialized = -1;

		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1)
				return true;
			if (isInitialized == 0)
				return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.github.os72.protobuf351.CodedOutputStream output) throws java.io.IOException {
			for (int i = 0; i < flyData_.size(); i++) {
				output.writeMessage(1, flyData_.get(i));
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1)
				return size;

			size = 0;
			for (int i = 0; i < flyData_.size(); i++) {
				size += com.github.os72.protobuf351.CodedOutputStream.computeMessageSize(1, flyData_.get(i));
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch)) {
				return super.equals(obj);
			}
			net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch other = (net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch) obj;

			boolean result = true;
			result = result && getFlyDataList().equals(other.getFlyDataList());
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@SuppressWarnings("unchecked")
		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (getFlyDataCount() > 0) {
				hash = (37 * hash) + FLYDATA_FIELD_NUMBER;
				hash = (53 * hash) + getFlyDataList().hashCode();
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(java.nio.ByteBuffer data)
				throws com.github.os72.protobuf351.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(java.nio.ByteBuffer data,
				com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
				throws com.github.os72.protobuf351.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(
				com.github.os72.protobuf351.ByteString data)
				throws com.github.os72.protobuf351.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(
				com.github.os72.protobuf351.ByteString data,
				com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
				throws com.github.os72.protobuf351.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(byte[] data)
				throws com.github.os72.protobuf351.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(byte[] data,
				com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
				throws com.github.os72.protobuf351.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(
				java.io.InputStream input) throws java.io.IOException {
			return com.github.os72.protobuf351.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(
				java.io.InputStream input, com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.github.os72.protobuf351.GeneratedMessageV3.parseWithIOException(PARSER, input,
					extensionRegistry);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseDelimitedFrom(
				java.io.InputStream input) throws java.io.IOException {
			return com.github.os72.protobuf351.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseDelimitedFrom(
				java.io.InputStream input, com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.github.os72.protobuf351.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
					extensionRegistry);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(
				com.github.os72.protobuf351.CodedInputStream input) throws java.io.IOException {
			return com.github.os72.protobuf351.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parseFrom(
				com.github.os72.protobuf351.CodedInputStream input,
				com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
			return com.github.os72.protobuf351.GeneratedMessageV3.parseWithIOException(PARSER, input,
					extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() {
			return newBuilder();
		}

		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}

		public static Builder newBuilder(net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}

		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(com.github.os72.protobuf351.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * <pre>
		 * 飞参数据
		 * </pre>
		 *
		 * Protobuf type {@code net.cc.luffy.entity.proto.UavFlyDataBatch}
		 */
		public static final class Builder extends com.github.os72.protobuf351.GeneratedMessageV3.Builder<Builder>
				implements
				// @@protoc_insertion_point(builder_implements:net.cc.luffy.entity.proto.UavFlyDataBatch)
				net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatchOrBuilder {
			public static final com.github.os72.protobuf351.Descriptors.Descriptor getDescriptor() {
				return net.cc.luffy.entity.proto.UavFlyDataBatchProto.internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_descriptor;
			}

			@java.lang.Override
			protected com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
				return net.cc.luffy.entity.proto.UavFlyDataBatchProto.internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch.class,
								net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch.Builder.class);
			}

			// Construct using
			// net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(com.github.os72.protobuf351.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			private void maybeForceBuilderInitialization() {
				if (com.github.os72.protobuf351.GeneratedMessageV3.alwaysUseFieldBuilders) {
					getFlyDataFieldBuilder();
				}
			}

			@java.lang.Override
			public Builder clear() {
				super.clear();
				if (flyDataBuilder_ == null) {
					flyData_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000001);
				} else {
					flyDataBuilder_.clear();
				}
				return this;
			}

			@java.lang.Override
			public com.github.os72.protobuf351.Descriptors.Descriptor getDescriptorForType() {
				return net.cc.luffy.entity.proto.UavFlyDataBatchProto.internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_descriptor;
			}

			@java.lang.Override
			public net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch getDefaultInstanceForType() {
				return net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch.getDefaultInstance();
			}

			@java.lang.Override
			public net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch build() {
				net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@SuppressWarnings("unused")
			@java.lang.Override
			public net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch buildPartial() {
				net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch result = new net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch(
						this);
				int from_bitField0_ = bitField0_;
				if (flyDataBuilder_ == null) {
					if (((bitField0_ & 0x00000001) == 0x00000001)) {
						flyData_ = java.util.Collections.unmodifiableList(flyData_);
						bitField0_ = (bitField0_ & ~0x00000001);
					}
					result.flyData_ = flyData_;
				} else {
					result.flyData_ = flyDataBuilder_.build();
				}
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}

			@java.lang.Override
			public Builder setField(com.github.os72.protobuf351.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}

			@java.lang.Override
			public Builder clearField(com.github.os72.protobuf351.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}

			@java.lang.Override
			public Builder clearOneof(com.github.os72.protobuf351.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}

			@java.lang.Override
			public Builder setRepeatedField(com.github.os72.protobuf351.Descriptors.FieldDescriptor field, int index,
					java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}

			@java.lang.Override
			public Builder addRepeatedField(com.github.os72.protobuf351.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}

			@java.lang.Override
			public Builder mergeFrom(com.github.os72.protobuf351.Message other) {
				if (other instanceof net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch) {
					return mergeFrom((net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch) other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch other) {
				if (other == net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch.getDefaultInstance())
					return this;
				if (flyDataBuilder_ == null) {
					if (!other.flyData_.isEmpty()) {
						if (flyData_.isEmpty()) {
							flyData_ = other.flyData_;
							bitField0_ = (bitField0_ & ~0x00000001);
						} else {
							ensureFlyDataIsMutable();
							flyData_.addAll(other.flyData_);
						}
						onChanged();
					}
				} else {
					if (!other.flyData_.isEmpty()) {
						if (flyDataBuilder_.isEmpty()) {
							flyDataBuilder_.dispose();
							flyDataBuilder_ = null;
							flyData_ = other.flyData_;
							bitField0_ = (bitField0_ & ~0x00000001);
							flyDataBuilder_ = com.github.os72.protobuf351.GeneratedMessageV3.alwaysUseFieldBuilders
									? getFlyDataFieldBuilder()
									: null;
						} else {
							flyDataBuilder_.addAllMessages(other.flyData_);
						}
					}
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(com.github.os72.protobuf351.CodedInputStream input,
					com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
				net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.github.os72.protobuf351.InvalidProtocolBufferException e) {
					parsedMessage = (net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch) e
							.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int bitField0_;

			private java.util.List<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData> flyData_ = java.util.Collections
					.emptyList();

			private void ensureFlyDataIsMutable() {
				if (!((bitField0_ & 0x00000001) == 0x00000001)) {
					flyData_ = new java.util.ArrayList<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData>(flyData_);
					bitField0_ |= 0x00000001;
				}
			}

			private com.github.os72.protobuf351.RepeatedFieldBuilderV3<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData, net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder, net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder> flyDataBuilder_;

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public java.util.List<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData> getFlyDataList() {
				if (flyDataBuilder_ == null) {
					return java.util.Collections.unmodifiableList(flyData_);
				} else {
					return flyDataBuilder_.getMessageList();
				}
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public int getFlyDataCount() {
				if (flyDataBuilder_ == null) {
					return flyData_.size();
				} else {
					return flyDataBuilder_.getCount();
				}
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData getFlyData(int index) {
				if (flyDataBuilder_ == null) {
					return flyData_.get(index);
				} else {
					return flyDataBuilder_.getMessage(index);
				}
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder setFlyData(int index, net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData value) {
				if (flyDataBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureFlyDataIsMutable();
					flyData_.set(index, value);
					onChanged();
				} else {
					flyDataBuilder_.setMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder setFlyData(int index,
					net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder builderForValue) {
				if (flyDataBuilder_ == null) {
					ensureFlyDataIsMutable();
					flyData_.set(index, builderForValue.build());
					onChanged();
				} else {
					flyDataBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder addFlyData(net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData value) {
				if (flyDataBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureFlyDataIsMutable();
					flyData_.add(value);
					onChanged();
				} else {
					flyDataBuilder_.addMessage(value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder addFlyData(int index, net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData value) {
				if (flyDataBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureFlyDataIsMutable();
					flyData_.add(index, value);
					onChanged();
				} else {
					flyDataBuilder_.addMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder addFlyData(net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder builderForValue) {
				if (flyDataBuilder_ == null) {
					ensureFlyDataIsMutable();
					flyData_.add(builderForValue.build());
					onChanged();
				} else {
					flyDataBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder addFlyData(int index,
					net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder builderForValue) {
				if (flyDataBuilder_ == null) {
					ensureFlyDataIsMutable();
					flyData_.add(index, builderForValue.build());
					onChanged();
				} else {
					flyDataBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder addAllFlyData(
					java.lang.Iterable<? extends net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData> values) {
				if (flyDataBuilder_ == null) {
					ensureFlyDataIsMutable();
					com.github.os72.protobuf351.AbstractMessageLite.Builder.addAll(values, flyData_);
					onChanged();
				} else {
					flyDataBuilder_.addAllMessages(values);
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder clearFlyData() {
				if (flyDataBuilder_ == null) {
					flyData_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000001);
					onChanged();
				} else {
					flyDataBuilder_.clear();
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public Builder removeFlyData(int index) {
				if (flyDataBuilder_ == null) {
					ensureFlyDataIsMutable();
					flyData_.remove(index);
					onChanged();
				} else {
					flyDataBuilder_.remove(index);
				}
				return this;
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder getFlyDataBuilder(int index) {
				return getFlyDataFieldBuilder().getBuilder(index);
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder getFlyDataOrBuilder(int index) {
				if (flyDataBuilder_ == null) {
					return flyData_.get(index);
				} else {
					return flyDataBuilder_.getMessageOrBuilder(index);
				}
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public java.util.List<? extends net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder> getFlyDataOrBuilderList() {
				if (flyDataBuilder_ != null) {
					return flyDataBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(flyData_);
				}
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder addFlyDataBuilder() {
				return getFlyDataFieldBuilder()
						.addBuilder(net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.getDefaultInstance());
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder addFlyDataBuilder(int index) {
				return getFlyDataFieldBuilder().addBuilder(index,
						net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.getDefaultInstance());
			}

			/**
			 * <code>repeated .net.cc.luffy.entity.proto.UavFlyData flyData = 1;</code>
			 */
			public java.util.List<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder> getFlyDataBuilderList() {
				return getFlyDataFieldBuilder().getBuilderList();
			}

			private com.github.os72.protobuf351.RepeatedFieldBuilderV3<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData, net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder, net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder> getFlyDataFieldBuilder() {
				if (flyDataBuilder_ == null) {
					flyDataBuilder_ = new com.github.os72.protobuf351.RepeatedFieldBuilderV3<net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData, net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyData.Builder, net.cc.luffy.entity.proto.UavFlyDataProto.UavFlyDataOrBuilder>(
							flyData_, ((bitField0_ & 0x00000001) == 0x00000001), getParentForChildren(), isClean());
					flyData_ = null;
				}
				return flyDataBuilder_;
			}

			@java.lang.Override
			public final Builder setUnknownFields(final com.github.os72.protobuf351.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(final com.github.os72.protobuf351.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}

			// @@protoc_insertion_point(builder_scope:net.cc.luffy.entity.proto.UavFlyDataBatch)
		}

		// @@protoc_insertion_point(class_scope:net.cc.luffy.entity.proto.UavFlyDataBatch)
		private static final net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch();
		}

		public static net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.github.os72.protobuf351.Parser<UavFlyDataBatch> PARSER = new com.github.os72.protobuf351.AbstractParser<UavFlyDataBatch>() {
			@java.lang.Override
			public UavFlyDataBatch parsePartialFrom(com.github.os72.protobuf351.CodedInputStream input,
					com.github.os72.protobuf351.ExtensionRegistryLite extensionRegistry)
					throws com.github.os72.protobuf351.InvalidProtocolBufferException {
				return new UavFlyDataBatch(input, extensionRegistry);
			}
		};

		public static com.github.os72.protobuf351.Parser<UavFlyDataBatch> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.github.os72.protobuf351.Parser<UavFlyDataBatch> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public net.cc.luffy.entity.proto.UavFlyDataBatchProto.UavFlyDataBatch getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	private static final com.github.os72.protobuf351.Descriptors.Descriptor internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_descriptor;
	private static final com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_fieldAccessorTable;

	public static com.github.os72.protobuf351.Descriptors.FileDescriptor getDescriptor() {
		return descriptor;
	}

	private static com.github.os72.protobuf351.Descriptors.FileDescriptor descriptor;
	static {
		java.lang.String[] descriptorData = { "\n\027uav_flydata_Batch.proto\022\031net.cc.luffy."
				+ "entity.proto\032\021uav_flydata.proto\"I\n\017UavFl"
				+ "yDataBatch\0226\n\007flyData\030\001 \003(\0132%.net.cc.luf"
				+ "fy.entity.proto.UavFlyDataB\026B\024UavFlyData" + "BatchProtob\006proto3" };
		com.github.os72.protobuf351.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.github.os72.protobuf351.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
			public com.github.os72.protobuf351.ExtensionRegistry assignDescriptors(
					com.github.os72.protobuf351.Descriptors.FileDescriptor root) {
				descriptor = root;
				return null;
			}
		};
		com.github.os72.protobuf351.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
				new com.github.os72.protobuf351.Descriptors.FileDescriptor[] {
						net.cc.luffy.entity.proto.UavFlyDataProto.getDescriptor(), },
				assigner);
		internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_descriptor = getDescriptor().getMessageTypes().get(0);
		internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_fieldAccessorTable = new com.github.os72.protobuf351.GeneratedMessageV3.FieldAccessorTable(
				internal_static_net_cc_luffy_entity_proto_UavFlyDataBatch_descriptor,
				new java.lang.String[] { "FlyData", });
		net.cc.luffy.entity.proto.UavFlyDataProto.getDescriptor();
	}

	// @@protoc_insertion_point(outer_class_scope)
}
